/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <st/f1/stm32f103Xb.dtsi>
#include <st/f1/stm32f103c(8-b)tx-pinctrl.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>

/ {
	model = "shah arisu";
	compatible = "st,stm32f103";

	chosen {
		zephyr,sram = &sram0;
		zephyr,flash = &flash0;
		zephyr,console = &cdc_acm_uart;
		zmk,kscan = &kscan0;
		zmk,matrix_transform = &default_transform;
		zephyr,code-partition = &code_partition;
	};

kscan0:
	kscan {
		compatible = "zmk,kscan-gpio-matrix";
		label = "KSCAN";
		diode-direction = "col2row";
		row-gpios 
			= <&gpioa 10(GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
			  <&gpioa 9(GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
			  <&gpioa 8(GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
			  <&gpiob 15(GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
			  <&gpiob 14(GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
		col-gpios 
			= <&gpioa 3 GPIO_ACTIVE_HIGH>, 
			  <&gpioa 4 GPIO_ACTIVE_HIGH>,
			  <&gpioa 5 GPIO_ACTIVE_HIGH>,
			  <&gpioa 6 GPIO_ACTIVE_HIGH>, 
			  <&gpiob 12 GPIO_ACTIVE_HIGH>,
			  <&gpiob 13 GPIO_ACTIVE_HIGH>,
			  <&gpiob 4 GPIO_ACTIVE_HIGH>, 
			  <&gpiob 5 GPIO_ACTIVE_HIGH>,
			  <&gpiob 6 GPIO_ACTIVE_HIGH>,
			  <&gpiob 7 GPIO_ACTIVE_HIGH>, 
			  <&gpiob 8 GPIO_ACTIVE_HIGH>,
			  <&gpiob 9 GPIO_ACTIVE_HIGH>,
			  <&gpioc 13 GPIO_ACTIVE_HIGH>, 
			  <&gpioc 14 GPIO_ACTIVE_HIGH>,
			  <&gpioc 15 GPIO_ACTIVE_HIGH>;
	};

default_transform:
	keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <15>;
		rows = <5>;
		map = <
		RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13) RC(0,14)
		RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(1,13) RC(1,14)
		RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11) RC(2,12) RC(2,13)
		RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11) RC(3,12) RC(3,13)
		RC(4,0) RC(4,1) RC(4,2) RC(4,4) RC(4,5) RC(4,9) RC(4,11) RC(4,12) RC(4,13)
		>;
	};
};

&usb {
	pinctrl-0 = <&usb_dm_pa11 &usb_dp_pa12>;
	pinctrl-names = "default";
	status = "okay";
cdc_acm_uart:
	cdc_acm_uart {
		compatible = "zephyr,cdc-acm-uart";
		label = "CDC_ACM_0";
	};
};

&clk_hse {
	status = "okay";
	clock-frequency = <DT_FREQ_M(12)>;
	// changed from 8 to 12 due to fastel crystal
};

&pll {
	//prediv = <1>; // do i need this?
	mul = <6>;
	// change the PLL to 6, down from the default of 9 due to faster crystal oscillator
	clocks = <&clk_hse>;
	status = "okay";
};

&rcc {
	clocks = <&pll>;
	clock-frequency = <DT_FREQ_M(72)>;
	ahb-prescaler = <1>;
	apb1-prescaler = <2>;
	apb2-prescaler = <1>;
};

&flash0 {
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		boot_partition: partition@0 {
                        reg = <0x00000000 0x2000>;
                        read-only;
                };

                code_partition: partition@2000 {
                        label = "code";
                        reg = <0x2000 0x010000>;
						read-only;
                };

                /*
                * The final 16 KiB is reserved for the application.
                * Storage partition will be used by FCB/LittleFS/NVS
                * if enabled.
                */
                storage_partition: partition@12000 {
                        label = "storage";
                        reg = <0x0012000 0x00004000>;
                };

	};
};
